// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkoutTracker.Data.Models;

namespace WorkoutTracker.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200629165332_AddedDefaultValues")]
    partial class AddedDefaultValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WorkoutTracker.Data.Models.Entities.MovementsMuscleGroups", b =>
                {
                    b.Property<int>("MovementId")
                        .HasColumnType("integer");

                    b.Property<int>("MusclGroupId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("MuscleGroupId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("MovementId", "MusclGroupId");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("MovementsMuscleGroups");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("MovementId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MovementId");

                    b.ToTable("Equipment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(449),
                            IsActive = true,
                            Name = "Barbell",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(459)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(477),
                            IsActive = true,
                            Name = "Dumbell",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(478)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(480),
                            IsActive = true,
                            Name = "Jump Rope",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(481)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(482),
                            IsActive = true,
                            Name = "Bench",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 293, DateTimeKind.Utc).AddTicks(482)
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PatternId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PatternId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.MovementPattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("MovementPatterns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(7258),
                            IsActive = true,
                            Name = "Hinge",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(7349)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8451),
                            IsActive = true,
                            Name = "Squat",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8455)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8471),
                            IsActive = true,
                            Name = "Lunge",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8472)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8473),
                            IsActive = true,
                            Name = "Push",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8474)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8475),
                            IsActive = true,
                            Name = "Pull",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8476)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8477),
                            IsActive = true,
                            Name = "Carry",
                            UpdatedAt = new DateTime(2020, 6, 29, 16, 53, 32, 291, DateTimeKind.Utc).AddTicks(8478)
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Muscle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("MuscleGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("Muscles");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.MuscleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("MuscleGroups");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Entities.MovementsMuscleGroups", b =>
                {
                    b.HasOne("WorkoutTracker.Data.Models.Movement", "Movement")
                        .WithMany("MovementsMuscleGroups")
                        .HasForeignKey("MovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Data.Models.MuscleGroup", "MuscleGroup")
                        .WithMany("MovementsMuscleGroups")
                        .HasForeignKey("MuscleGroupId");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Equipment", b =>
                {
                    b.HasOne("WorkoutTracker.Data.Models.Movement", null)
                        .WithMany("EquipmentNeeded")
                        .HasForeignKey("MovementId");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Movement", b =>
                {
                    b.HasOne("WorkoutTracker.Data.Models.MovementPattern", "Pattern")
                        .WithMany()
                        .HasForeignKey("PatternId");
                });

            modelBuilder.Entity("WorkoutTracker.Data.Models.Muscle", b =>
                {
                    b.HasOne("WorkoutTracker.Data.Models.MuscleGroup", null)
                        .WithMany("MusclesWorked")
                        .HasForeignKey("MuscleGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
